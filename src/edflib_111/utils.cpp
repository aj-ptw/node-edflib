extern "C" {
	#include "edflib.h"
}

#define _ERROR_CASE(Name) case Name: return #Name

const char *edferror_text(const int error)
{
	switch (error) {
	_ERROR_CASE(EDFLIB_MALLOC_ERROR);
	_ERROR_CASE(EDFLIB_NO_SUCH_FILE_OR_DIRECTORY);
	_ERROR_CASE(EDFLIB_FILE_CONTAINS_FORMAT_ERRORS);
	_ERROR_CASE(EDFLIB_MAXFILES_REACHED);
	_ERROR_CASE(EDFLIB_FILE_READ_ERROR);
	_ERROR_CASE(EDFLIB_FILE_ALREADY_OPENED);
	_ERROR_CASE(EDFLIB_FILETYPE_ERROR);
	_ERROR_CASE(EDFLIB_FILE_WRITE_ERROR);
	_ERROR_CASE(EDFLIB_NUMBER_OF_SIGNALS_INVALID);
	_ERROR_CASE(EDFLIB_FILE_IS_DISCONTINUOUS);
	_ERROR_CASE(EDFLIB_INVALID_READ_ANNOTS_VALUE);
	_ERROR_CASE(EDFLIB_ERR_BASE);
	_ERROR_CASE(EDFLIB_ERR_FILE_NOT_OPENED);
	_ERROR_CASE(EDFLIB_ERR_MAXFILES);
	_ERROR_CASE(EDFLIB_ERR_FILE_NOT_IN_HEADERLIST);
	_ERROR_CASE(EDFLIB_ERR_WRONG_SIGNAL);
	_ERROR_CASE(EDFLIB_ERR_WRONG_SAMPLES_NO);
	_ERROR_CASE(EDFLIB_ERR_WRONG_SAMPLES_PTR);
	_ERROR_CASE(EDFLIB_ERR_UNEXPECTED_EOF);
	_ERROR_CASE(EDFLIB_ERR_IN_WRITE_MODE);
	_ERROR_CASE(EDFLIB_ERR_WRONG_ANNOTATION);
	_ERROR_CASE(EDFLIB_ERR_FILE_LOCKED);
	_ERROR_CASE(EDFLIB_ERR_NOT_IN_WRITE_MODE);
	_ERROR_CASE(EDFLIB_ERR_SAMPLE_FREQUENCY);
	_ERROR_CASE(EDFLIB_ERR_DATARECORDS);
	_ERROR_CASE(EDFLIB_ERR_WRONG_PARAMETER);
	_ERROR_CASE(EDFLIB_ERR_WRONG_EDFSIGNALS_NUMBER);
	_ERROR_CASE(EDFLIB_ERR_WRONG_GENDER);
	//_ERROR_CASE(EDFLIB_ERR_WRONG_PARAMETER);
	
	_ERROR_CASE(EDFLIB_ERR_HEADER_BASE);
	_ERROR_CASE(EDFLIB_HEADER_ERR_MAXSIGNALS);
	_ERROR_CASE(EDFLIB_HEADER_ERR_SMP_PER_RECORD);
	_ERROR_CASE(EDFLIB_HEADER_ERR_DIG_MAX_EQ_MIN);
	_ERROR_CASE(EDFLIB_HEADER_ERR_DIG_MAX_LESS_MIN);
	_ERROR_CASE(EDFLIB_HEADER_ERR_PHYS_MAX_EQ_MIN);
	default: return "Undefined";
	}
}